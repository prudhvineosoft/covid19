{"version":3,"sources":["components/NavBar/index.js","components/StateItem/index.js","components/StateDataBox/index.js","components/Footer/index.js","components/Home/index.js","components/EachQuestion/index.js","components/About/index.js","components/TopDistricts/index.js","components/Graphs/index.js","components/EachState/index.js","components/NewState/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","Component","StateItem","this","props","eachState","updateSearchInput","stateData","stateCode","state_code","stateName","state_name","toUpperCase","onClick","StateDataBox","homeData","counting","total","confirmed","recovered","deceased","each","Intl","NumberFormat","format","meta","population","Footer","Home","state","searchInput","suggestions","box","totalConfirmed","totalActive","totalRecovered","totalDeceased","fetchingData","a","fetch","response","json","data","setState","onChangeSearchInput","event","target","value","length","name","code","value1","value2","value3","value4","prevState","backPage","statesList","searchResults1","filter","eachSuggestion","toLowerCase","startsWith","searchResults2","adding","concat","searchResults","Set","console","log","src","alt","type","placeholder","autoComplete","onChange","map","EachQuestion","all","question","answer","About","AboutData","isLoading","fetchAboutData","faq","testid","color","height","width","one","conformed","district","Graphs","lineData","date","uv","pv","amt","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","dates","len","updated","borderRadius","reverse","options","title","display","text","fontSize","legend","position","maintainAspectRatio","style","ResponsiveContainer","LineChart","syncId","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","EachState","districts","go","fourMonths","Array","elementInArray","index","push","Object","entries","shift","datesList","e","delta","tested","vaccinated1","allDistricts","allDistrictsList","sort","b","NewState","gettingData","match","params","id","substring","each2","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.941298d6.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\n\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className=\"nav\">\n        <h1 className=\"heading\">\n          COVID19<span className=\"heading-span\">INDIA</span>\n        </h1>\n        <div className=\"links\">\n          <Link className=\"link1\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"link2\" to=\"/about\">\n            About\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\nexport default NavBar\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport './index.css'\n\nclass StateItem extends Component {\n  render() {\n    const {eachState, updateSearchInput} = this.props\n    const stateData = {\n      stateCode: eachState.state_code,\n      stateName: eachState.state_name,\n    }\n    const onClickState = () => {\n      updateSearchInput(stateData.stateName, stateData.stateCode)\n    }\n    return (\n      <Link\n        to={`/state/:${stateData.stateCode.toUpperCase()}`}\n        className=\"link\"\n      >\n        <li className=\"each-state\" onClick={onClickState}>\n          <p className=\"state-name\">{stateData.stateName}</p>\n          <div className=\"state-code-dec\">\n            <p className=\"state-code\">{stateData.stateCode}</p>\n            <div className=\"symbol-border\">\n              <p className=\"symbol\">&#62;</p>\n            </div>\n          </div>\n        </li>\n      </Link>\n    )\n  }\n}\nexport default StateItem\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport './index.css'\n\nclass StateDataBox extends Component {\n  componentDidMount() {\n    const {homeData, counting} = this.props\n    counting(\n      homeData.total.confirmed,\n      homeData.total.confirmed - homeData.total.recovered,\n      homeData.total.recovered,\n      homeData.total.deceased,\n    )\n  }\n\n  render() {\n    const {homeData, each} = this.props\n\n    const stateData = {\n      stateCode: each.state_code,\n      stateName: each.state_name,\n    }\n\n    return (\n      <Link\n        to={`/state/:${stateData.stateCode.toUpperCase()}`}\n        className=\"link\"\n      >\n        <li className=\"each-state\">\n          <div className=\"column\">\n            <p className=\"state-name\">{each.state_name} </p>\n            <span className=\"p-column-first2 Confirmed \">\n              {Intl.NumberFormat('en-IN').format(homeData.total.confirmed)}\n            </span>\n            <span className=\"p-column2 Active\">\n              {Intl.NumberFormat('en-IN').format(\n                homeData.total.confirmed - homeData.total.recovered,\n              )}\n            </span>\n            <span className=\"p-column2 Recovered\">\n              {Intl.NumberFormat('en-IN').format(homeData.total.recovered)}\n            </span>\n            <span className=\"p-column2 Deceased\">\n              {' '}\n              {Intl.NumberFormat('en-IN').format(homeData.total.deceased)}\n            </span>\n            <span className=\"p-column2 Population\">\n              {Intl.NumberFormat('en-IN').format(homeData.meta.population)}\n            </span>\n          </div>\n        </li>\n      </Link>\n    )\n  }\n}\nexport default StateDataBox\n","import {Component} from 'react'\n\nimport './index.css'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer-bg\">\n        <h1 className=\"heading2\">\n          COVID19<span className=\"heading-span2\">INDIA</span>\n        </h1>\n        <p className=\"footer-para\">\n          we stand with everyone fighting on the front lines\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import {Component} from 'react'\n\nimport StateItem from '../StateItem'\n\nimport StateDataBox from '../StateDataBox'\n\nimport Footer from '../Footer'\n\nimport './index.css'\n\nclass Home extends Component {\n  state = {\n    searchInput: '',\n    stateCode: '',\n    suggestions: false,\n    box: false,\n    homeData: '',\n    totalConfirmed: 0,\n    totalActive: 0,\n    totalRecovered: 0,\n    totalDeceased: 0,\n    state: true,\n  }\n\n  componentDidMount() {\n    this.fetchingData()\n  }\n\n  fetchingData = async () => {\n    const response = await fetch(\n      'https://data.covid19india.org/v4/min/data.min.json',\n    )\n    const data = await response.json()\n    this.setState({homeData: data, box: true})\n  }\n\n  onChangeSearchInput = event => {\n    this.setState({\n      searchInput: event.target.value,\n    })\n    if (event.target.value.length > 0) {\n      this.setState({\n        suggestions: true,\n      })\n    } else {\n      this.setState({\n        suggestions: false,\n      })\n    }\n  }\n\n  updateSearchInput = (name, code) => {\n    this.setState({\n      searchInput: name,\n      suggestions: false,\n      stateCode: code,\n      state: false,\n    })\n  }\n\n  counting = (value1, value2, value3, value4) => {\n    this.setState(prevState => ({\n      totalConfirmed: prevState.totalConfirmed + value1,\n      totalActive: prevState.totalActive + value2,\n      totalRecovered: prevState.totalRecovered + value3,\n      totalDeceased: prevState.totalDeceased + value4,\n    }))\n  }\n\n  backPage = value => {\n    this.setState({state: value, searchInput: ''})\n  }\n\n  render() {\n    const {statesList} = this.props\n    const {\n      searchInput,\n      suggestions,\n      stateCode,\n      homeData,\n      box,\n      totalConfirmed,\n      totalActive,\n      totalRecovered,\n      totalDeceased,\n      state,\n    } = this.state\n    const searchResults1 = statesList.filter(eachSuggestion =>\n      eachSuggestion.state_name\n        .toLowerCase()\n        .startsWith(searchInput.toLowerCase()),\n    )\n    const searchResults2 = statesList.filter(eachSuggestion =>\n      eachSuggestion.state_code\n        .toLowerCase()\n        .startsWith(searchInput.toLowerCase()),\n    )\n    const adding = searchResults1.concat(searchResults2)\n    const searchResults = [...new Set(adding)]\n    console.log(stateCode)\n    console.log(Intl.NumberFormat().format(totalConfirmed))\n    return (\n      <>\n        {state ? (\n          <div className=\"bg-container\">\n            <div className=\"input-bar\">\n              <img\n                src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624025781/search-3_lihgsr.png\"\n                alt=\"search\"\n                className=\"color\"\n              />\n              <input\n                type=\"search\"\n                className=\"search-bar\"\n                name=\"search-bar\"\n                placeholder=\"Enter The State\"\n                autoComplete=\"off\"\n                onChange={this.onChangeSearchInput}\n                value={searchInput}\n              />\n            </div>\n            {suggestions ? (\n              <ul className=\"searching-states\">\n                {searchResults.map(eachState => (\n                  <StateItem\n                    key={eachState.state_code}\n                    eachState={eachState}\n                    updateSearchInput={this.updateSearchInput}\n                  />\n                ))}\n              </ul>\n            ) : null}\n            <div className=\"stats\">\n              <div className=\"confirmed card\">\n                <p className=\"p1\">Confirmed</p>\n                <img\n                  src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008273/check-mark_1-5_uij39a.png\"\n                  alt=\"Confirmed\"\n                />\n                <p className=\"p2\">\n                  {Intl.NumberFormat('en-IN').format(totalConfirmed)}\n                </p>\n              </div>\n              <div className=\"active card\">\n                <p className=\"p1\">Active</p>\n                <img\n                  src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008278/protection_1_dv4xk0.png\"\n                  alt=\"Active\"\n                />\n                <p className=\"p2\">\n                  {Intl.NumberFormat('en-IN').format(totalActive)}\n                </p>\n              </div>\n              <div className=\"recovered card\">\n                <p className=\"p1\">Recovered</p>\n                <img\n                  src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008279/recovered_1-4_k4rujs.png\"\n                  alt=\"Recovered\"\n                />\n                <p className=\"p2\">\n                  {Intl.NumberFormat('en-IN').format(totalRecovered)}\n                </p>\n              </div>\n              <div className=\"deceased card\">\n                <p className=\"p1\">Deceased</p>\n                <img\n                  src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008272/breathing_1-5_ouqpcv.png\"\n                  alt=\"Deceased\"\n                />\n                <p className=\"p2\">\n                  {Intl.NumberFormat('en-IN').format(totalDeceased)}\n                </p>\n              </div>\n            </div>\n            <div className=\"box\">\n              <div className=\"column\">\n                <p className=\"column-name\">States/UT </p>\n                <span className=\"p-column-first\"> Confirmed</span>\n                <span className=\"p-column\"> Active</span>\n                <span className=\"p-column\"> Recovered</span>\n                <span className=\"p-column\"> Deceased</span>\n                <span className=\"p-column\"> Population</span>\n              </div>\n\n              <hr className=\"hr\" />\n              {box ? (\n                <ul className=\"box-data\">\n                  {statesList.map(each => (\n                    <StateDataBox\n                      each={each}\n                      key={each.state_code}\n                      homeData={homeData[each.state_code]}\n                      counting={this.counting}\n                    />\n                  ))}\n                </ul>\n              ) : null}\n            </div>\n            <Footer />\n          </div>\n        ) : null}\n      </>\n    )\n  }\n}\nexport default Home\n","import {Component} from 'react'\n\nimport './index.css'\n\nclass EachQuestion extends Component {\n  render() {\n    const {all} = this.props\n    console.log(all)\n    return (\n      <li className=\"About-li\">\n        <p className=\"question\">{all.question}</p>\n        <p className=\"answer\">{all.answer}</p>\n      </li>\n    )\n  }\n}\n\nexport default EachQuestion\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\n\nimport EachQuestion from '../EachQuestion'\n\nimport './index.css'\n\nclass About extends Component {\n  state = {AboutData: [], isLoading: true}\n\n  componentDidMount() {\n    this.fetchAboutData()\n  }\n\n  fetchAboutData = async () => {\n    const response = await fetch(\n      'https://data.covid19india.org/website_data.json',\n    )\n    const data = await response.json()\n    this.setState({AboutData: data.faq, isLoading: false})\n  }\n\n  render() {\n    const {AboutData, isLoading} = this.state\n    return (\n      <div className=\"about-bg-container\">\n        {isLoading ? (\n          <div testid=\"loader\" className=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} />\n          </div>\n        ) : (\n          <div>\n            <p className=\"about-heading\">About</p>\n            <p className=\"about-para\">\n              COVID-19 vaccines be ready for distribution\n            </p>\n            <ul className=\"about-ul\">\n              {AboutData.map(all => (\n                <EachQuestion all={all} key={all.question} />\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\nexport default About\n","import {Component} from 'react'\n\nimport './index.css'\n\nclass About extends Component {\n  render() {\n    const {one} = this.props\n    return (\n      <li className=\"top-districts-li\">\n        <p className=\"top-districts-values\">\n          {Intl.NumberFormat('en-IN').format(one.conformed)}\n        </p>\n        <p className=\"top-districts-name\">{one.district}</p>\n      </li>\n    )\n  }\n}\nexport default About\n","import {Component} from 'react'\n\nimport {Bar} from 'react-chartjs-2'\n\nimport './index.css'\n\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Line,\n  ResponsiveContainer,\n} from 'recharts'\n\nclass Graphs extends Component {\n  state = {\n    lineData: [\n      {\n        date: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n      },\n      {\n        date: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n      },\n    ],\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May'],\n      datasets: [\n        {\n          label: 'Rainfall',\n          fill: true,\n          lineTension: 0.6,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n        },\n      ],\n    },\n  }\n\n  componentDidMount() {\n    const {dates} = this.props\n\n    console.log(dates)\n    const len = dates.length\n    console.log(len)\n    const lab = [\n      dates[9].date,\n      dates[8].date,\n      dates[7].date,\n      dates[6].date,\n      dates[5].date,\n      dates[4].date,\n      dates[3].date,\n      dates[2].date,\n      dates[1].date,\n      dates[0].date,\n    ]\n    const dat = [\n      dates[9].conformed,\n      dates[8].conformed,\n      dates[7].conformed,\n      dates[6].conformed,\n      dates[5].conformed,\n      dates[4].conformed,\n      dates[3].conformed,\n      dates[2].conformed,\n      dates[1].conformed,\n      dates[0].conformed,\n    ]\n    const updated = {\n      labels: lab,\n      datasets: [\n        {\n          label: 'Confirmed',\n          fill: true,\n          lineTension: 0.8,\n          backgroundColor: '#9A0E31',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 0,\n          borderRadius: 10,\n          data: dat,\n        },\n      ],\n    }\n    dates.reverse()\n    this.setState({data: updated, lineData: dates})\n  }\n\n  render() {\n    const {data, lineData} = this.state\n\n    return (\n      <div>\n        <div className=\"bar-graph\">\n          <Bar\n            data={data}\n            options={{\n              title: {\n                display: true,\n                text: 'Average Rainfall per month',\n                fontSize: 20,\n              },\n              legend: {\n                display: true,\n                position: 'right',\n              },\n              maintainAspectRatio: true,\n            }}\n          />\n        </div>\n\n        <div style={{width: '100%'}}>\n          <div className=\"chart chart-conformed\">\n            <p className=\"graph-name graph-conformed\">Confirmed</p>\n            <ResponsiveContainer width=\"100%\" height={260}>\n              <LineChart\n                width={1000}\n                height={260}\n                data={lineData}\n                syncId=\"anyId\"\n                margin={{\n                  top: 10,\n                  right: 30,\n                  left: 0,\n                  bottom: 0,\n                }}\n              >\n                <CartesianGrid\n                  strokeDasharray=\"3 3\"\n                  style={{display: 'none'}}\n                />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"conformed\"\n                  stroke=\"#FF073A\"\n                  fill=\"#FF073A\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"chart chart-recovered\">\n            <p className=\"graph-name graph-recovered\">Recovered</p>\n            <ResponsiveContainer width=\"100%\" height={260}>\n              <LineChart\n                width={1000}\n                height={260}\n                data={lineData}\n                syncId=\"anyId\"\n                margin={{\n                  top: 10,\n                  right: 30,\n                  left: 0,\n                  bottom: 0,\n                }}\n              >\n                <CartesianGrid\n                  strokeDasharray=\"3 3\"\n                  style={{display: 'none'}}\n                />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"recovered\"\n                  stroke=\"#27A243\"\n                  fill=\"#27A243\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"chart chart-deceased\">\n            <p className=\"graph-name graph-deceased\">Deceased</p>\n            <ResponsiveContainer width=\"100%\" height={260}>\n              <LineChart\n                width={1000}\n                height={260}\n                data={lineData}\n                syncId=\"anyId\"\n                margin={{\n                  top: 10,\n                  right: 30,\n                  left: 0,\n                  bottom: 0,\n                }}\n              >\n                <CartesianGrid\n                  strokeDasharray=\"3 3\"\n                  style={{display: 'none'}}\n                />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"deceased\"\n                  stroke=\"#6C757D\"\n                  fill=\"#6C757D\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"chart chart-tested\">\n            <p className=\"graph-name graph-tested\">Tested</p>\n            <ResponsiveContainer width=\"100%\" height={260}>\n              <LineChart\n                width={1000}\n                height={260}\n                data={lineData}\n                syncId=\"anyId\"\n                margin={{\n                  top: 10,\n                  right: 30,\n                  left: 0,\n                  bottom: 0,\n                }}\n              >\n                <CartesianGrid\n                  strokeDasharray=\"3 3\"\n                  style={{display: 'none'}}\n                />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"tested\"\n                  stroke=\"#9673B9\"\n                  fill=\"#9673B9\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"chart chart-vaccinated1\">\n            <p className=\"graph-name graph-vaccinated1\">Vaccinated</p>\n            <ResponsiveContainer width=\"100%\" height={260}>\n              <LineChart\n                width={1000}\n                height={260}\n                data={lineData}\n                syncId=\"anyId\"\n                margin={{\n                  top: 10,\n                  right: 30,\n                  left: 0,\n                  bottom: 0,\n                }}\n              >\n                <CartesianGrid\n                  strokeDasharray=\"3 3\"\n                  style={{display: 'none'}}\n                />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"vaccinated1\"\n                  stroke=\"#F95581\"\n                  fill=\"#F95581\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Graphs\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\n\nimport TopDistricts from '../TopDistricts'\n\nimport Graphs from '../Graphs'\n\nimport './index.css'\n\nclass EachState extends Component {\n  state = {districts: [], dates: [], go: false}\n\n  componentDidMount() {\n    this.fetchAboutData()\n    const {stateData} = this.props\n    const allDistricts = stateData.districts\n    const allDistrictsList = Object.entries(allDistricts).map(e => ({\n      district: e[0.0],\n      conformed: e[1].total.confirmed,\n    }))\n    allDistrictsList.sort((a, b) => (b.conformed > a.conformed ? 1 : -1))\n    this.setState({districts: allDistrictsList})\n  }\n\n  fetchAboutData = async () => {\n    const {stateCode} = this.props\n\n    const response = await fetch(\n      `https://data.covid19india.org/v4/min/timeseries-${stateCode}.min.json`,\n    )\n    const data = await response.json()\n    const fourMonths = []\n    const n = 120\n    ;[...Array(n)].map((elementInArray, index) =>\n      fourMonths.push(\n        Object.entries(data[stateCode].dates)[\n          Object.entries(data[stateCode].dates).length - index\n        ],\n      ),\n    )\n\n    fourMonths.shift()\n    fourMonths.shift()\n    const datesList = fourMonths.map(e => ({\n      date: e[0],\n      conformed: e[1].delta.confirmed,\n      deceased: e[1].delta.deceased,\n      recovered: e[1].delta.recovered,\n      tested: e[1].delta.tested,\n      vaccinated1: e[1].delta.vaccinated1,\n    }))\n    this.setState({dates: datesList, go: true})\n  }\n\n  render() {\n    const {districts, dates, go} = this.state\n    const {stateData, searchInput} = this.props\n\n    return (\n      <div className=\"bg-container\">\n        <div className=\"Each-state-stateName\">\n          <div className=\"each-state-name\">\n            <div className=\"name-back\">\n              <p className=\"Each-state-state-name\">{searchInput}</p>\n            </div>\n            <p className=\"each-state-para\">\n              Last update on\n              <span className=\"last-update\">{stateData.meta.tested.date}</span>\n            </p>\n          </div>\n          <div className=\"each-state-name2\">\n            <p className=\"Each-state-tested\">Tested</p>\n            <p className=\"each-state-tested-number\">\n              {Intl.NumberFormat('en-IN').format(stateData.total.tested)}\n            </p>\n          </div>\n        </div>\n        <div className=\"stats\">\n          <div className=\"confirmed card\">\n            <p className=\"p1\">Confirmed</p>\n            <img\n              src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008273/check-mark_1-5_uij39a.png\"\n              alt=\"Confirmed\"\n            />\n            <p className=\"p2\">\n              {Intl.NumberFormat('en-IN').format(stateData.total.confirmed)}\n            </p>\n          </div>\n          <div className=\"active card\">\n            <p className=\"p1\">Active</p>\n            <img\n              src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008278/protection_1_dv4xk0.png\"\n              alt=\"Active\"\n            />\n            <p className=\"p2\">\n              {Intl.NumberFormat('en-IN').format(\n                stateData.total.confirmed - stateData.total.recovered,\n              )}\n            </p>\n          </div>\n          <div className=\"recovered card\">\n            <p className=\"p1\">Recovered</p>\n            <img\n              src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008279/recovered_1-4_k4rujs.png\"\n              alt=\"Recovered\"\n            />\n            <p className=\"p2\">\n              {Intl.NumberFormat('en-IN').format(stateData.total.recovered)}\n            </p>\n          </div>\n          <div className=\"deceased card\">\n            <p className=\"p1\">Deceased</p>\n            <img\n              src=\"https://res.cloudinary.com/deqohhami/image/upload/v1624008272/breathing_1-5_ouqpcv.png\"\n              alt=\"Deceased\"\n            />\n            <p className=\"p2\">\n              {Intl.NumberFormat('en-IN').format(stateData.total.deceased)}\n            </p>\n          </div>\n        </div>\n        <div className=\"top-districts\">\n          <p className=\"top-districts-heading\">Top Districts</p>\n          <ul className=\"top-districts-ul\">\n            {districts.map(one => (\n              <TopDistricts one={one} key={one.district} />\n            ))}\n          </ul>\n        </div>\n        {go ? (\n          <div className=\"\">\n            <Graphs dates={dates} />\n          </div>\n        ) : (\n          <div testid=\"loader\" className=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\nexport default EachState\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\n\nimport EachState from '../EachState'\n\nimport './index.css'\n\nconst statesList = [\n  {\n    state_code: 'AN',\n    state_name: 'Andaman and Nicobar Islands',\n  },\n  {\n    state_code: 'AP',\n    state_name: 'Andhra Pradesh',\n  },\n  {\n    state_code: 'AR',\n    state_name: 'Arunachal Pradesh',\n  },\n  {\n    state_code: 'AS',\n    state_name: 'Assam',\n  },\n  {\n    state_code: 'BR',\n    state_name: 'Bihar',\n  },\n  {\n    state_code: 'CH',\n    state_name: 'Chandigarh',\n  },\n  {\n    state_code: 'CT',\n    state_name: 'Chhattisgarh',\n  },\n  {\n    state_code: 'DN',\n    state_name: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    state_code: 'DL',\n    state_name: 'Delhi',\n  },\n  {\n    state_code: 'GA',\n    state_name: 'Goa',\n  },\n  {\n    state_code: 'GJ',\n    state_name: 'Gujarat',\n  },\n  {\n    state_code: 'HR',\n    state_name: 'Haryana',\n  },\n  {\n    state_code: 'HP',\n    state_name: 'Himachal Pradesh',\n  },\n  {\n    state_code: 'JK',\n    state_name: 'Jammu and Kashmir',\n  },\n  {\n    state_code: 'JH',\n    state_name: 'Jharkhand',\n  },\n  {\n    state_code: 'KA',\n    state_name: 'Karnataka',\n  },\n  {\n    state_code: 'KL',\n    state_name: 'Kerala',\n  },\n  {\n    state_code: 'LA',\n    state_name: 'Ladakh',\n  },\n  {\n    state_code: 'LD',\n    state_name: 'Lakshadweep',\n  },\n  {\n    state_code: 'MH',\n    state_name: 'Maharashtra',\n  },\n  {\n    state_code: 'MP',\n    state_name: 'Madhya Pradesh',\n  },\n  {\n    state_code: 'MN',\n    state_name: 'Manipur',\n  },\n  {\n    state_code: 'ML',\n    state_name: 'Meghalaya',\n  },\n  {\n    state_code: 'MZ',\n    state_name: 'Mizoram',\n  },\n  {\n    state_code: 'NL',\n    state_name: 'Nagaland',\n  },\n  {\n    state_code: 'OR',\n    state_name: 'Odisha',\n  },\n  {\n    state_code: 'PY',\n    state_name: 'Puducherry',\n  },\n  {\n    state_code: 'PB',\n    state_name: 'Punjab',\n  },\n  {\n    state_code: 'RJ',\n    state_name: 'Rajasthan',\n  },\n  {\n    state_code: 'SK',\n    state_name: 'Sikkim',\n  },\n  {\n    state_code: 'TN',\n    state_name: 'Tamil Nadu',\n  },\n  {\n    state_code: 'TG',\n    state_name: 'Telangana',\n  },\n  {\n    state_code: 'TR',\n    state_name: 'Tripura',\n  },\n  {\n    state_code: 'UP',\n    state_name: 'Uttar Pradesh',\n  },\n  {\n    state_code: 'UT',\n    state_name: 'Uttarakhand',\n  },\n  {\n    state_code: 'WB',\n    state_name: 'West Bengal',\n  },\n]\n\nclass NewState extends Component {\n  state = {homeData: '', box: false}\n\n  componentDidMount() {\n    this.gettingData()\n  }\n\n  gettingData = async () => {\n    const response = await fetch(\n      'https://data.covid19india.org/v4/min/data.min.json',\n    )\n    const data = await response.json()\n    this.setState({homeData: data, box: true})\n  }\n\n  render() {\n    const {homeData, box} = this.state\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const state = id.substring(1).toUpperCase()\n    const filtered = statesList.filter(each2 => each2.state_code === state)\n    const searchInput = filtered[0].state_name\n\n    return (\n      <div className=\"about-bg-container\">\n        {box ? (\n          <EachState\n            stateData={homeData[state]}\n            searchInput={searchInput}\n            stateCode={state}\n          />\n        ) : (\n          <div testid=\"loader\" className=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default NewState\n","import {BrowserRouter, Switch, Route} from 'react-router-dom'\n\nimport NavBar from './components/NavBar'\n\nimport Home from './components/Home'\n\nimport About from './components/About'\n\nimport NewState from './components/NewState'\n\nimport './App.css'\n\nconst statesList = [\n  {\n    state_code: 'AN',\n    state_name: 'Andaman and Nicobar Islands',\n  },\n  {\n    state_code: 'AP',\n    state_name: 'Andhra Pradesh',\n  },\n  {\n    state_code: 'AR',\n    state_name: 'Arunachal Pradesh',\n  },\n  {\n    state_code: 'AS',\n    state_name: 'Assam',\n  },\n  {\n    state_code: 'BR',\n    state_name: 'Bihar',\n  },\n  {\n    state_code: 'CH',\n    state_name: 'Chandigarh',\n  },\n  {\n    state_code: 'CT',\n    state_name: 'Chhattisgarh',\n  },\n  {\n    state_code: 'DN',\n    state_name: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    state_code: 'DL',\n    state_name: 'Delhi',\n  },\n  {\n    state_code: 'GA',\n    state_name: 'Goa',\n  },\n  {\n    state_code: 'GJ',\n    state_name: 'Gujarat',\n  },\n  {\n    state_code: 'HR',\n    state_name: 'Haryana',\n  },\n  {\n    state_code: 'HP',\n    state_name: 'Himachal Pradesh',\n  },\n  {\n    state_code: 'JK',\n    state_name: 'Jammu and Kashmir',\n  },\n  {\n    state_code: 'JH',\n    state_name: 'Jharkhand',\n  },\n  {\n    state_code: 'KA',\n    state_name: 'Karnataka',\n  },\n  {\n    state_code: 'KL',\n    state_name: 'Kerala',\n  },\n  {\n    state_code: 'LA',\n    state_name: 'Ladakh',\n  },\n  {\n    state_code: 'LD',\n    state_name: 'Lakshadweep',\n  },\n  {\n    state_code: 'MH',\n    state_name: 'Maharashtra',\n  },\n  {\n    state_code: 'MP',\n    state_name: 'Madhya Pradesh',\n  },\n  {\n    state_code: 'MN',\n    state_name: 'Manipur',\n  },\n  {\n    state_code: 'ML',\n    state_name: 'Meghalaya',\n  },\n  {\n    state_code: 'MZ',\n    state_name: 'Mizoram',\n  },\n  {\n    state_code: 'NL',\n    state_name: 'Nagaland',\n  },\n  {\n    state_code: 'OR',\n    state_name: 'Odisha',\n  },\n  {\n    state_code: 'PY',\n    state_name: 'Puducherry',\n  },\n  {\n    state_code: 'PB',\n    state_name: 'Punjab',\n  },\n  {\n    state_code: 'RJ',\n    state_name: 'Rajasthan',\n  },\n  {\n    state_code: 'SK',\n    state_name: 'Sikkim',\n  },\n  {\n    state_code: 'TN',\n    state_name: 'Tamil Nadu',\n  },\n  {\n    state_code: 'TG',\n    state_name: 'Telangana',\n  },\n  {\n    state_code: 'TR',\n    state_name: 'Tripura',\n  },\n  {\n    state_code: 'UP',\n    state_name: 'Uttar Pradesh',\n  },\n  {\n    state_code: 'UT',\n    state_name: 'Uttarakhand',\n  },\n  {\n    state_code: 'WB',\n    state_name: 'West Bengal',\n  },\n]\n\nconst App = () => (\n  <div>\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={() => <Home statesList={statesList} />}\n        />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/state/:id\" component={NewState} />\n      </Switch>\n    </BrowserRouter>\n  </div>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}